
//------------------------------------------------------------------------------
// (c) Copyright 2014 Xilinx, Inc. All rights reserved.
//
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.
//------------------------------------------------------------------------------ 
//
// C Model configuration for the "fir_compiler_0" instance.
//
//------------------------------------------------------------------------------
//
// coefficients: 6250,-218,-218,-218,-220,-224,-230,-236,-245,-255,-267,-279,-294,-309,-326,-344,-364,-385,-407,-430,-455,-481,-508,-536,-566,-596,-629,-661,-696,-731,-768,-805,-844,-883,-924,-965,-1009,-1052,-1099,-1142,-1191,-1245,-1286,-1337,-1387,-1440,-1492,-1547,-1602,-1657,-1713,-1770,-1828,-1886,-1945,-2005,-2065,-2126,-2187,-2249,-2312,-2375,-2438,-2502,-2567,-2631,-2696,-2762,-2827,-2893,-2959,-3025,-3091,-3157,-3223,-3289,-3355,-3420,-3486,-3551,-3617,-3680,-3743,-3808,-3871,-3934,-3995,-4056,-4116,-4175,-4234,-4292,-4348,-4404,-4459,-4512,-4564,-4615,-4664,-4712,-4759,-4804,-4847,-4889,-4929,-4968,-5004,-5039,-5072,-5102,-5131,-5158,-5182,-5204,-5224,-5242,-5257,-5269,-5280,-5287,-5292,-5294,-5294,-5291,-5285,-5276,-5264,-5249,-5231,-5211,-5187,-5160,-5129,-5096,-5059,-5019,-4976,-4929,-4879,-4826,-4769,-4708,-4644,-4577,-4506,-4432,-4354,-4272,-4187,-4098,-4005,-3909,-3809,-3706,-3599,-3488,-3374,-3256,-3135,-3010,-2881,-2748,-2613,-2473,-2330,-2183,-2033,-1880,-1723,-1562,-1398,-1231,-1061,-887,-711,-530,-347,-161,28,220,416,614,814,1018,1224,1433,1644,1858,2074,2293,2514,2737,2962,3189,3418,3649,3881,4116,4351,4589,4827,5067,5309,5551,5794,6039,6284,6530,6776,7023,7270,7518,7766,8014,8262,8510,8757,9004,9251,9497,9743,9987,10231,10474,10716,10956,11195,11433,11669,11903,12136,12367,12595,12822,13047,13269,13488,13706,13920,14132,14341,14547,14750,14950,15146,15339,15529,15715,15898,16077,16252,16424,16591,16754,16913,17068,17219,17365,17507,17644,17777,17905,18028,18147,18260,18369,18473,18572,18666,18755,18838,18916,18990,19058,19120,19177,19229,19276,19317,19352,19383,19407,19427,19440,19449,19452,19449,19440,19427,19407,19383,19352,19317,19276,19229,19177,19120,19058,18990,18916,18838,18755,18666,18572,18473,18369,18260,18147,18028,17905,17777,17644,17507,17365,17219,17068,16913,16754,16591,16424,16252,16077,15898,15715,15529,15339,15146,14950,14750,14547,14341,14132,13920,13706,13488,13269,13047,12822,12595,12367,12136,11903,11669,11433,11195,10956,10716,10474,10231,9987,9743,9497,9251,9004,8757,8510,8262,8014,7766,7518,7270,7023,6776,6530,6284,6039,5794,5551,5309,5067,4827,4589,4351,4116,3881,3649,3418,3189,2962,2737,2514,2293,2074,1858,1644,1433,1224,1018,814,614,416,220,28,-161,-347,-530,-711,-887,-1061,-1231,-1398,-1562,-1723,-1880,-2033,-2183,-2330,-2473,-2613,-2748,-2881,-3010,-3135,-3256,-3374,-3488,-3599,-3706,-3809,-3909,-4005,-4098,-4187,-4272,-4354,-4432,-4506,-4577,-4644,-4708,-4769,-4826,-4879,-4929,-4976,-5019,-5059,-5096,-5129,-5160,-5187,-5211,-5231,-5249,-5264,-5276,-5285,-5291,-5294,-5294,-5292,-5287,-5280,-5269,-5257,-5242,-5224,-5204,-5182,-5158,-5131,-5102,-5072,-5039,-5004,-4968,-4929,-4889,-4847,-4804,-4759,-4712,-4664,-4615,-4564,-4512,-4459,-4404,-4348,-4292,-4234,-4175,-4116,-4056,-3995,-3934,-3871,-3808,-3743,-3680,-3617,-3551,-3486,-3420,-3355,-3289,-3223,-3157,-3091,-3025,-2959,-2893,-2827,-2762,-2696,-2631,-2567,-2502,-2438,-2375,-2312,-2249,-2187,-2126,-2065,-2005,-1945,-1886,-1828,-1770,-1713,-1657,-1602,-1547,-1492,-1440,-1387,-1337,-1286,-1245,-1191,-1142,-1099,-1052,-1009,-965,-924,-883,-844,-805,-768,-731,-696,-661,-629,-596,-566,-536,-508,-481,-455,-430,-407,-385,-364,-344,-326,-309,-294,-279,-267,-255,-245,-236,-230,-224,-220,-218,-218,-218,6250,-3530,599,549,502,459,418,380,344,311,280,251,224,199,176,155,134,116,98,83,68,54,41,30,19,9,-1,-9,-17,-23,-30,-36,-41,-46,-51,-54,-58,-61,-64,-66,-69,-69,-72,-74,-71,-76,-77,-77,-75,-76,-76,-77,-77,-76,-75,-74,-73,-72,-72,-71,-70,-69,-68,-67,-65,-63,-62,-60,-59,-57,-56,-54,-53,-51,-49,-48,-46,-44,-42,-40,-38,-36,-34,-32,-31,-28,-26,-25,-22,-20,-18,-17,-14,-12,-10,-8,-6,-4,-2,0,3,5,7,8,10,12,14,17,19,21,23,25,27,29,31,33,35,37,38,40,42,44,45,47,49,50,52,54,55,56,58,59,61,62,63,65,66,67,68,69,70,71,71,72,73,73,74,74,74,74,74,75,75,75,75,74,74,74,73,73,72,71,71,70,69,68,66,65,64,62,61,59,57,55,53,51,49,47,45,42,40,37,34,32,29,26,23,20,16,13,10,6,3,-1,-5,-9,-13,-16,-21,-25,-29,-33,-38,-42,-46,-51,-56,-60,-65,-70,-75,-79,-84,-89,-94,-99,-104,-109,-114,-119,-124,-129,-134,-139,-145,-150,-155,-160,-165,-170,-176,-181,-186,-191,-196,-201,-206,-211,-216,-221,-226,-230,-235,-240,-244,-249,-253,-258,-262,-266,-271,-275,-279,-283,-287,-290,-294,-298,-301,-304,-308,-311,-314,-317,-320,-323,-325,-328,-330,-332,-335,-337,-339,-340,-342,-343,-345,-346,-347,-348,-349,-350,-351,-351,-351,-352,32416,-352,-351,-351,-351,-350,-349,-348,-347,-346,-345,-343,-342,-340,-339,-337,-335,-332,-330,-328,-325,-323,-320,-317,-314,-311,-308,-304,-301,-298,-294,-290,-287,-283,-279,-275,-271,-266,-262,-258,-253,-249,-244,-240,-235,-230,-226,-221,-216,-211,-206,-201,-196,-191,-186,-181,-176,-170,-165,-160,-155,-150,-145,-139,-134,-129,-124,-119,-114,-109,-104,-99,-94,-89,-84,-79,-75,-70,-65,-60,-56,-51,-46,-42,-38,-33,-29,-25,-21,-16,-13,-9,-5,-1,3,6,10,13,16,20,23,26,29,32,34,37,40,42,45,47,49,51,53,55,57,59,61,62,64,65,66,68,69,70,71,71,72,73,73,74,74,74,75,75,75,75,74,74,74,74,74,73,73,72,71,71,70,69,68,67,66,65,63,62,61,59,58,56,55,54,52,50,49,47,45,44,42,40,38,37,35,33,31,29,27,25,23,21,19,17,14,12,10,8,7,5,3,0,-2,-4,-6,-8,-10,-12,-14,-17,-18,-20,-22,-25,-26,-28,-31,-32,-34,-36,-38,-40,-42,-44,-46,-48,-49,-51,-53,-54,-56,-57,-59,-60,-62,-63,-65,-67,-68,-69,-70,-71,-72,-72,-73,-74,-75,-76,-77,-77,-76,-76,-75,-77,-77,-76,-71,-74,-72,-69,-69,-66,-64,-61,-58,-54,-51,-46,-41,-36,-30,-23,-17,-9,-1,9,19,30,41,54,68,83,98,116,134,155,176,199,224,251,280,311,344,380,418,459,502,549,599,-3530
// chanpats: 173
// name: fir_compiler_0
// filter_type: 0
// rate_change: 0
// interp_rate: 1
// decim_rate: 1
// zero_pack_factor: 1
// coeff_padding: 4
// num_coeffs: 571
// coeff_sets: 2
// reloadable: 1
// is_halfband: 0
// quantization: 0
// coeff_width: 16
// coeff_fract_width: 0
// chan_seq: 0
// num_channels: 1
// num_paths: 1
// data_width: 16
// data_fract_width: 0
// output_rounding_mode: 0
// output_width: 42
// output_fract_width: 0
// config_method: 0

const double fir_compiler_0_coefficients[1142] = {6250,-218,-218,-218,-220,-224,-230,-236,-245,-255,-267,-279,-294,-309,-326,-344,-364,-385,-407,-430,-455,-481,-508,-536,-566,-596,-629,-661,-696,-731,-768,-805,-844,-883,-924,-965,-1009,-1052,-1099,-1142,-1191,-1245,-1286,-1337,-1387,-1440,-1492,-1547,-1602,-1657,-1713,-1770,-1828,-1886,-1945,-2005,-2065,-2126,-2187,-2249,-2312,-2375,-2438,-2502,-2567,-2631,-2696,-2762,-2827,-2893,-2959,-3025,-3091,-3157,-3223,-3289,-3355,-3420,-3486,-3551,-3617,-3680,-3743,-3808,-3871,-3934,-3995,-4056,-4116,-4175,-4234,-4292,-4348,-4404,-4459,-4512,-4564,-4615,-4664,-4712,-4759,-4804,-4847,-4889,-4929,-4968,-5004,-5039,-5072,-5102,-5131,-5158,-5182,-5204,-5224,-5242,-5257,-5269,-5280,-5287,-5292,-5294,-5294,-5291,-5285,-5276,-5264,-5249,-5231,-5211,-5187,-5160,-5129,-5096,-5059,-5019,-4976,-4929,-4879,-4826,-4769,-4708,-4644,-4577,-4506,-4432,-4354,-4272,-4187,-4098,-4005,-3909,-3809,-3706,-3599,-3488,-3374,-3256,-3135,-3010,-2881,-2748,-2613,-2473,-2330,-2183,-2033,-1880,-1723,-1562,-1398,-1231,-1061,-887,-711,-530,-347,-161,28,220,416,614,814,1018,1224,1433,1644,1858,2074,2293,2514,2737,2962,3189,3418,3649,3881,4116,4351,4589,4827,5067,5309,5551,5794,6039,6284,6530,6776,7023,7270,7518,7766,8014,8262,8510,8757,9004,9251,9497,9743,9987,10231,10474,10716,10956,11195,11433,11669,11903,12136,12367,12595,12822,13047,13269,13488,13706,13920,14132,14341,14547,14750,14950,15146,15339,15529,15715,15898,16077,16252,16424,16591,16754,16913,17068,17219,17365,17507,17644,17777,17905,18028,18147,18260,18369,18473,18572,18666,18755,18838,18916,18990,19058,19120,19177,19229,19276,19317,19352,19383,19407,19427,19440,19449,19452,19449,19440,19427,19407,19383,19352,19317,19276,19229,19177,19120,19058,18990,18916,18838,18755,18666,18572,18473,18369,18260,18147,18028,17905,17777,17644,17507,17365,17219,17068,16913,16754,16591,16424,16252,16077,15898,15715,15529,15339,15146,14950,14750,14547,14341,14132,13920,13706,13488,13269,13047,12822,12595,12367,12136,11903,11669,11433,11195,10956,10716,10474,10231,9987,9743,9497,9251,9004,8757,8510,8262,8014,7766,7518,7270,7023,6776,6530,6284,6039,5794,5551,5309,5067,4827,4589,4351,4116,3881,3649,3418,3189,2962,2737,2514,2293,2074,1858,1644,1433,1224,1018,814,614,416,220,28,-161,-347,-530,-711,-887,-1061,-1231,-1398,-1562,-1723,-1880,-2033,-2183,-2330,-2473,-2613,-2748,-2881,-3010,-3135,-3256,-3374,-3488,-3599,-3706,-3809,-3909,-4005,-4098,-4187,-4272,-4354,-4432,-4506,-4577,-4644,-4708,-4769,-4826,-4879,-4929,-4976,-5019,-5059,-5096,-5129,-5160,-5187,-5211,-5231,-5249,-5264,-5276,-5285,-5291,-5294,-5294,-5292,-5287,-5280,-5269,-5257,-5242,-5224,-5204,-5182,-5158,-5131,-5102,-5072,-5039,-5004,-4968,-4929,-4889,-4847,-4804,-4759,-4712,-4664,-4615,-4564,-4512,-4459,-4404,-4348,-4292,-4234,-4175,-4116,-4056,-3995,-3934,-3871,-3808,-3743,-3680,-3617,-3551,-3486,-3420,-3355,-3289,-3223,-3157,-3091,-3025,-2959,-2893,-2827,-2762,-2696,-2631,-2567,-2502,-2438,-2375,-2312,-2249,-2187,-2126,-2065,-2005,-1945,-1886,-1828,-1770,-1713,-1657,-1602,-1547,-1492,-1440,-1387,-1337,-1286,-1245,-1191,-1142,-1099,-1052,-1009,-965,-924,-883,-844,-805,-768,-731,-696,-661,-629,-596,-566,-536,-508,-481,-455,-430,-407,-385,-364,-344,-326,-309,-294,-279,-267,-255,-245,-236,-230,-224,-220,-218,-218,-218,6250,-3530,599,549,502,459,418,380,344,311,280,251,224,199,176,155,134,116,98,83,68,54,41,30,19,9,-1,-9,-17,-23,-30,-36,-41,-46,-51,-54,-58,-61,-64,-66,-69,-69,-72,-74,-71,-76,-77,-77,-75,-76,-76,-77,-77,-76,-75,-74,-73,-72,-72,-71,-70,-69,-68,-67,-65,-63,-62,-60,-59,-57,-56,-54,-53,-51,-49,-48,-46,-44,-42,-40,-38,-36,-34,-32,-31,-28,-26,-25,-22,-20,-18,-17,-14,-12,-10,-8,-6,-4,-2,0,3,5,7,8,10,12,14,17,19,21,23,25,27,29,31,33,35,37,38,40,42,44,45,47,49,50,52,54,55,56,58,59,61,62,63,65,66,67,68,69,70,71,71,72,73,73,74,74,74,74,74,75,75,75,75,74,74,74,73,73,72,71,71,70,69,68,66,65,64,62,61,59,57,55,53,51,49,47,45,42,40,37,34,32,29,26,23,20,16,13,10,6,3,-1,-5,-9,-13,-16,-21,-25,-29,-33,-38,-42,-46,-51,-56,-60,-65,-70,-75,-79,-84,-89,-94,-99,-104,-109,-114,-119,-124,-129,-134,-139,-145,-150,-155,-160,-165,-170,-176,-181,-186,-191,-196,-201,-206,-211,-216,-221,-226,-230,-235,-240,-244,-249,-253,-258,-262,-266,-271,-275,-279,-283,-287,-290,-294,-298,-301,-304,-308,-311,-314,-317,-320,-323,-325,-328,-330,-332,-335,-337,-339,-340,-342,-343,-345,-346,-347,-348,-349,-350,-351,-351,-351,-352,32416,-352,-351,-351,-351,-350,-349,-348,-347,-346,-345,-343,-342,-340,-339,-337,-335,-332,-330,-328,-325,-323,-320,-317,-314,-311,-308,-304,-301,-298,-294,-290,-287,-283,-279,-275,-271,-266,-262,-258,-253,-249,-244,-240,-235,-230,-226,-221,-216,-211,-206,-201,-196,-191,-186,-181,-176,-170,-165,-160,-155,-150,-145,-139,-134,-129,-124,-119,-114,-109,-104,-99,-94,-89,-84,-79,-75,-70,-65,-60,-56,-51,-46,-42,-38,-33,-29,-25,-21,-16,-13,-9,-5,-1,3,6,10,13,16,20,23,26,29,32,34,37,40,42,45,47,49,51,53,55,57,59,61,62,64,65,66,68,69,70,71,71,72,73,73,74,74,74,75,75,75,75,74,74,74,74,74,73,73,72,71,71,70,69,68,67,66,65,63,62,61,59,58,56,55,54,52,50,49,47,45,44,42,40,38,37,35,33,31,29,27,25,23,21,19,17,14,12,10,8,7,5,3,0,-2,-4,-6,-8,-10,-12,-14,-17,-18,-20,-22,-25,-26,-28,-31,-32,-34,-36,-38,-40,-42,-44,-46,-48,-49,-51,-53,-54,-56,-57,-59,-60,-62,-63,-65,-67,-68,-69,-70,-71,-72,-72,-73,-74,-75,-76,-77,-77,-76,-76,-75,-77,-77,-76,-71,-74,-72,-69,-69,-66,-64,-61,-58,-54,-51,-46,-41,-36,-30,-23,-17,-9,-1,9,19,30,41,54,68,83,98,116,134,155,176,199,224,251,280,311,344,380,418,459,502,549,599,-3530};

const xip_fir_v7_2_pattern fir_compiler_0_chanpats[1] = {P_BASIC};

static xip_fir_v7_2_config gen_fir_compiler_0_config() {
  xip_fir_v7_2_config config;
  config.name                = "fir_compiler_0";
  config.filter_type         = 0;
  config.rate_change         = XIP_FIR_INTEGER_RATE;
  config.interp_rate         = 1;
  config.decim_rate          = 1;
  config.zero_pack_factor    = 1;
  config.coeff               = &fir_compiler_0_coefficients[0];
  config.coeff_padding       = 4;
  config.num_coeffs          = 571;
  config.coeff_sets          = 2;
  config.reloadable          = 1;
  config.is_halfband         = 0;
  config.quantization        = XIP_FIR_INTEGER_COEFF;
  config.coeff_width         = 16;
  config.coeff_fract_width   = 0;
  config.chan_seq            = XIP_FIR_BASIC_CHAN_SEQ;
  config.num_channels        = 1;
  config.init_pattern        = fir_compiler_0_chanpats[0];
  config.num_paths           = 1;
  config.data_width          = 16;
  config.data_fract_width    = 0;
  config.output_rounding_mode= XIP_FIR_FULL_PRECISION;
  config.output_width        = 42;
  config.output_fract_width  = 0,
  config.config_method       = XIP_FIR_CONFIG_SINGLE;
  return config;
}

const xip_fir_v7_2_config fir_compiler_0_config = gen_fir_compiler_0_config();

